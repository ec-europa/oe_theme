<?php

/**
 * @file
 * Module file is used for theming the Call for proposals content type.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\oe_content_call_proposals\CallForProposalsNodeWrapper;

/**
 * Implements hook_theme().
 */
function oe_theme_content_call_proposals_theme() {
  return [
    'oe_theme_content_call_proposals_publication_info' => [
      'variables' => [
        'date' => '',
        'link' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_call_proposals_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Run only for "Call for proposals" content type.
  if ($entity->bundle() !== 'oe_call_proposals') {
    return;
  }

  // Field labels are different in frontend and backend.
  // Here we override them, in full and teaser view mode.
  $label_overrides = [];
  if ($entity->get('oe_call_proposals_deadline')->count() > 1) {
    $label_overrides['oe_call_proposals_deadline'] = t('Deadline dates');
  }

  _oe_theme_helper_field_view_label_override($build, $entity, $label_overrides, ['full', 'teaser']);

  $label_overrides += [
    'oe_departments' => t('Departments'),
    'oe_call_proposals_grants' => t('Results'),
  ];

  if ($entity->get('oe_departments')->count() === 1) {
    $label_overrides['oe_departments'] = t('Department');
  }

  _oe_theme_helper_field_view_label_override($build, $entity, $label_overrides, ['full']);
}
