<?php

/**
 * @file
 * Module file used for theming Person content type.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\oe_theme\ValueObject\ImageValueObject;

/**
 * Prepares variables for in-page navigation.
 *
 * Default template: oe-theme-helper-in-page-navigation.html.twig.
 *
 * @param array $variables
 *   An array of variables.
 */
function oe_theme_content_person_preprocess_oe_theme_helper_in_page_navigation__node__oe_person(array &$variables): void {
  _oe_theme_helper_prepare_oe_theme_helper_in_page_navigation_with_image($variables, 'oe_person_photo');

  if (empty($variables['image'])) {
    // Set default image.
    $image_path = base_path() . drupal_get_path('theme', 'oe_theme') . '/images/user_icon.svg';
    $variables['image'] = ImageValueObject::fromArray(['src' => $image_path]);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oe_theme_content_person_preprocess_field__node__oe_person_organisation__oe_person__full(&$variables) {
  foreach ($variables['items'] as $key => $item) {
    $node = $variables['items'][$key]['content']['#node'];
    $variables['items'][$key]['content'] = [
      '#markup' => $node->label(),
    ];
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_person_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() !== 'oe_person') {
    return;
  }

  if ($build['#view_mode'] === 'full') {
    // Override field labels.
    if ($entity->get('oe_departments')->count() === 1) {
      $build['oe_departments']['#title'] = t('Department');
    }
  }
}
